
Low Coupling
(Низька/Слабка пов'язаність/зачеплення)
-----------------------------------------
Ступінь зв'язаності класів визначає, наскільки клас
пов'язаний з іншими класами та якою інформацією про інші
класах він володіє.

При проектуванні відносин між класами слід
розподілити обов'язки таким чином, щоб ступінь
пов'язаності залишалася низькою.

Low coupling говорить про те, що необхідно, щоб код був
слабо пов'язаний і залежав лише від абстракцій.

ЯКЩО один клас використовує інший клас, це зв'язок.
Між модулями не повинно бути занадто великої залежності,
навіть якщо залежність є, то вона має бути через інтерфейси
і має бути мінімальною.

КОЛИ уникаємо конкретних реалізацій (конкретних класів)
і абстрагуємось на рівнях інтерфейсів (які легко підміняти
потрібними нам реалізаціями), тоді код не зав'язаний на
певні реалізації.

ЯКЩО об'єкти в додатку сильно пов'язані, то будь-яка їх
зміна призводить до змін у всіх пов'язаних об'єктах.
Це незручно і породжує багато проблем.

При створенні складної програми в Java логіка одного класу
буде викликати логіку іншого класу для надання тієї
ж послуги клієнтам.
Якщо один клас викликає логіку іншого класу, це називається
співробітництвом.
Коли один клас співпрацює з іншим класом, між двома
класами існує тісний зв'язок.
Якщо один клас хоче викликати логіку другого класу, то
першому класу потрібен об'єкт другого класу, це означає,
що перший клас створює об'єкт другого класу.

Слабка зв'язаність зустрічається в SOLID принципах,
Dependency Inversion Principle (DIP).
Слабка пов'язаність, по суті, це реалізація Dependency
Injection.

https://en.wikipedia.org/wiki/Dependency_injection
https://medium.com/groupon-eng/dependency-injection-in-java-9e9438aa55ae


