
Class CountDownLatch use-case
--------------------------------
УМОВА. Човен вміщує певну кількість (N) пасажирів.
Відплив човна відбувається тільки після заповнення всіх
N місць.
РЕАЛІЗАЦІЯ.
(1) Запускаємо основний потік.
(2) Створюємо екземпляр Class CountDownLatch із початковим лічильником
(count = N, для N потоків). Class CountDownLatch визначає конструктор
CountDownLatch(int count). Лічильник є кількістю потоків, які повинна
чекати засувка (latch). Це значення можна встановити лише один раз.
Class CountDownLatch не надає жодного механізму для скидання цього
лічильника.
(3) Створюємо та запускаємо N потоків.
(4) Викликаємо CountDownLatch.await() із основного потоку.
Цей основний потік повинен викликати метод await() відразу
після запуску інших потоків.
Виконання зупиниться на методі await() доти, доки
інші потоки не завершать виконання.
(5) Викликаємо метод CountDownLatch.countDown() після завершення
виконання кожного потоку. Інші N потоків повинні мати посилання
на об'єкт-засувку, тому що їм потрібно буде повідомити об'єкт
Class CountDownLatch про те, що вони виконали своє завдання.
Це повідомлення виконується методом countDown().
Кожен виклик методу зменшує на 1 початковий лічильник, встановлений
у конструкторі.
(6) Відновлюємо основний потік. Коли всі N потоків викликають метод
countDown(), лічильник досягає нуля, і основному потоку дозволяється
відновити виконання після методу await().
