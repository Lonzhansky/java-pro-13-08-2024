
Class CyclicBarrier (Циклічний бар'єр)
https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/CyclicBarrier.html

CyclicBarrier побудований на КОНЦЕПЦІЇ сторін.
Це ДОЗВОЛЯЄ потокам чекати один одного, щоб ДОСЯГТИ
загальної точки бар'єру.

Метод await БЛОКУЄТЬСЯ до тих пір, поки не прибудуть
всі сторони.

CyclicBarrier поводиться як інверсія CountDownLatch.
Після того, як N чекають, бар'єр продовжується.

CyclicBarrier підтримує необов'язковий runnable,
який запускається один раз на кожну точку бар'єру.
Після прибуття останньої групи, але перед тим, як їх відпустять.
Зазвичай бар'єр використовується для оновлення загального стану між
потоками.

Бар'єр ЦИКЛІЧНИЙ, тому що його МОЖНА використовувати
ПОВТОРНО після звільнення очікуваних потоків.


Робота CyclicBarrier
-----------------------
CyclicBarrier ІНІЦІАЛІЗУЄТЬСЯ із заданим значенням,
і бар'єр ВІДКЛЮЧАЄТЬСЯ, коли кількість потоків, що очікують
на бар'єрі, дорівнює цьому значенню.

Щоб змусити потік чекати у цього бар'єру, для потоку
викликається метод await().

Потік, що викликає метод await(), означає, що потік ДОСЯГ
загальної точки бар'єру, і цей потік ВІДКЛЮЧЕНИЙ До тих пір, поки
необхідна кількість потоків не викличе метод await(),
ПІСЛЯ ЧОГО бар'єр відключається і потоки розблоковуються.

Таким чином, потоки можуть синхронізувати своє виконання.

