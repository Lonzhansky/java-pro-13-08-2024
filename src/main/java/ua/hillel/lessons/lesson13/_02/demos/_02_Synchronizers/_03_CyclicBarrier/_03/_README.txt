
Бізнес-кейс
--------------
N автомобілів рухаються з пункту А пункт В.
Вони їдуть із різною швидкістю.
Визначено декілька контрольних точок на маршруті.
Досягши першої контрольної точки, всі чекають, поки
решта дістануться цієї контрольної точки.
Як тільки всі N прибудуть, вони відновлять рух та
поїдуть до наступної контрольної точки.


Використання CyclicBarrier
------------------------------
1) Запускаємо основний потік.

2) Створюємо об'єкт CyclicBarrier.
Клас CyclicBarrier має конструктори.
Вони створюють новий об'єкт CyclicBarrier із загальною
кількістю сторін/потоків, які чекають одна на одну
після досягнення бар'єру.

CyclicBarrier(int parties)
CyclicBarrier(int parties, Runnable barrierAction)

Параметр parties означає кількість потоків, які
повинні викликати await() після досягнення бар'єру.

Параметр barrierAction вказує потік, який буде
виконуватися при досягненні бар'єру.

3) Створюємо та запускаємо N потоків.

4) Викликаємо метод await() на кожному бар'єрі/контрольній точці
у методі run() потоку.
Коли кожен потік досягає бар'єру (контрольної точки),
викликаємо метод await() для об'єкта CyclicBarrier.
Це призупинить потік до тих пір, поки всі потоки також
не викличуть метод await() для того ж об'єкта CyclicBarrier.

Як тільки всі вказані потоки викликали метод await(), вони
можуть поновити роботу.


